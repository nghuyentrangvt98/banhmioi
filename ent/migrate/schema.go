// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CartsColumns holds the columns for the "carts" table.
	CartsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "variation", Type: field.TypeJSON},
		{Name: "qty", Type: field.TypeInt32},
		{Name: "price", Type: field.TypeInt64},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"done", "processing", "fail"}},
		{Name: "note", Type: field.TypeString, Nullable: true},
		{Name: "cart_user", Type: field.TypeInt, Nullable: true},
		{Name: "cart_product", Type: field.TypeInt, Nullable: true},
		{Name: "order_cart", Type: field.TypeInt, Nullable: true},
	}
	// CartsTable holds the schema information for the "carts" table.
	CartsTable = &schema.Table{
		Name:       "carts",
		Columns:    CartsColumns,
		PrimaryKey: []*schema.Column{CartsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carts_users_user",
				Columns:    []*schema.Column{CartsColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "carts_products_product",
				Columns:    []*schema.Column{CartsColumns[7]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "carts_orders_cart",
				Columns:    []*schema.Column{CartsColumns[8]},
				RefColumns: []*schema.Column{OrdersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// NewsColumns holds the columns for the "news" table.
	NewsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "subtitle", Type: field.TypeString, Nullable: true},
		{Name: "content", Type: field.TypeString, Size: 2147483647},
		{Name: "author", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "category", Type: field.TypeString},
		{Name: "product_url", Type: field.TypeString, Nullable: true},
		{Name: "image_url", Type: field.TypeString},
	}
	// NewsTable holds the schema information for the "news" table.
	NewsTable = &schema.Table{
		Name:       "news",
		Columns:    NewsColumns,
		PrimaryKey: []*schema.Column{NewsColumns[0]},
	}
	// OrdersColumns holds the columns for the "orders" table.
	OrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "phone", Type: field.TypeString},
		{Name: "address", Type: field.TypeString},
		{Name: "note", Type: field.TypeString, Nullable: true},
		{Name: "total", Type: field.TypeFloat32},
		{Name: "discount", Type: field.TypeFloat32},
		{Name: "order_user", Type: field.TypeInt, Nullable: true},
	}
	// OrdersTable holds the schema information for the "orders" table.
	OrdersTable = &schema.Table{
		Name:       "orders",
		Columns:    OrdersColumns,
		PrimaryKey: []*schema.Column{OrdersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "orders_users_user",
				Columns:    []*schema.Column{OrdersColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductsColumns holds the columns for the "products" table.
	ProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Size: 2147483647},
		{Name: "list_price", Type: field.TypeInt64},
		{Name: "sale_price", Type: field.TypeInt64},
		{Name: "variation", Type: field.TypeJSON},
		{Name: "stock_qty", Type: field.TypeInt32},
		{Name: "product_url", Type: field.TypeString},
		{Name: "category", Type: field.TypeString},
		{Name: "measurement_unit", Type: field.TypeString},
	}
	// ProductsTable holds the schema information for the "products" table.
	ProductsTable = &schema.Table{
		Name:       "products",
		Columns:    ProductsColumns,
		PrimaryKey: []*schema.Column{ProductsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "fullname", Type: field.TypeString},
		{Name: "gender", Type: field.TypeEnum, Enums: []string{"male", "female"}},
		{Name: "dob", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CartsTable,
		NewsTable,
		OrdersTable,
		ProductsTable,
		UsersTable,
	}
)

func init() {
	CartsTable.ForeignKeys[0].RefTable = UsersTable
	CartsTable.ForeignKeys[1].RefTable = ProductsTable
	CartsTable.ForeignKeys[2].RefTable = OrdersTable
	OrdersTable.ForeignKeys[0].RefTable = UsersTable
}
