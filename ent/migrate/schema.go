// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// NewsColumns holds the columns for the "news" table.
	NewsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "subtitle", Type: field.TypeString},
		{Name: "content", Type: field.TypeString, Size: 2147483647},
		{Name: "author", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "category", Type: field.TypeString},
		{Name: "product_url", Type: field.TypeString},
		{Name: "image_url", Type: field.TypeString},
	}
	// NewsTable holds the schema information for the "news" table.
	NewsTable = &schema.Table{
		Name:       "news",
		Columns:    NewsColumns,
		PrimaryKey: []*schema.Column{NewsColumns[0]},
	}
	// ProductsColumns holds the columns for the "products" table.
	ProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Size: 2147483647},
		{Name: "list_price", Type: field.TypeInt64},
		{Name: "sale_price", Type: field.TypeInt64},
		{Name: "variation", Type: field.TypeJSON},
		{Name: "stock_qty", Type: field.TypeInt32},
		{Name: "product_url", Type: field.TypeString},
		{Name: "category", Type: field.TypeString},
		{Name: "measurement_unit", Type: field.TypeString},
	}
	// ProductsTable holds the schema information for the "products" table.
	ProductsTable = &schema.Table{
		Name:       "products",
		Columns:    ProductsColumns,
		PrimaryKey: []*schema.Column{ProductsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "fullname", Type: field.TypeString},
		{Name: "gender", Type: field.TypeEnum, Enums: []string{"male", "female"}},
		{Name: "dob", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		NewsTable,
		ProductsTable,
		UsersTable,
	}
)

func init() {
}
